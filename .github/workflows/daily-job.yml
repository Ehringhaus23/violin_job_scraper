name: Daily Job Scraper

on:
  schedule:
    - cron: '0 23 * * *'  # 9am AEST (UTC+10)
  workflow_dispatch:

jobs:
  scrape_jobs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Restore yesterday's CSV from cache
        id: cache-restore
        uses: actions/cache@v4
        with:
          path: orchestra_jobs_yesterday.csv
          key: yesterday-csv

      - name: Print cached CSV (after restore)
        run: |
          echo "=== orchestra_jobs_yesterday.csv ==="
          if [ -f orchestra_jobs_yesterday.csv ]; then
            cat orchestra_jobs_yesterday.csv
          else
            echo "File not found."
          fi

      - name: Rename yesterday's CSV if exists
        run: |
          if [ -f "orchestra_jobs_yesterday.csv" ]; then
            mv orchestra_jobs_yesterday.csv orchestra_jobs_prev.csv
          fi

      - name: Run the job scraper
        run: |
          python main.py

      - name: Print today's CSV (after main.py)
        run: |
          TODAY=$(date '+%Y-%m-%d')
          echo "=== orchestra_jobs_${TODAY}.csv ==="
          if [ -f "orchestra_jobs_${TODAY}.csv" ]; then
            cat "orchestra_jobs_${TODAY}.csv"
          else
            echo "File not found."
          fi

      - name: Rename today's CSV for cache
        run: |
          TODAY=$(date '+%Y-%m-%d')
          if [ -f "orchestra_jobs_${TODAY}.csv" ]; then
            cp "orchestra_jobs_${TODAY}.csv" orchestra_jobs_yesterday.csv
          fi

      - name: Print CSV to be saved to cache (before cache step)
        run: |
          echo "=== orchestra_jobs_yesterday.csv (to be cached) ==="
          if [ -f orchestra_jobs_yesterday.csv ]; then
            cat orchestra_jobs_yesterday.csv
          else
            echo "File not found."
          fi

      - name: Fetch absurd inspiration from InspiroBot
        id: inspirobot
        run: |
          image_url=$(curl -s https://inspirobot.me/api?generate=true)
          echo "QUOTE=[Click here for today's absurd inspiration!]($image_url)" >> $GITHUB_ENV

      - name: Compare CSV Link Columns
        id: compare_links
        run: |
          TODAY=$(date '+%Y-%m-%d')
          TODAY_FILE="orchestra_jobs_${TODAY}.csv"
          YESTERDAY_FILE="orchestra_jobs_prev.csv"
          DIFF_COUNT=0
          if [ -f "$YESTERDAY_FILE" ] && [ -f "$TODAY_FILE" ]; then
            while IFS=, read -r loc1 date1 pos1 orch1 link1; do
              match=$(tail -n +2 "$YESTERDAY_FILE" | grep -F "$link1")
              if [ -z "$match" ]; then
                DIFF_COUNT=$((DIFF_COUNT+1))
              fi
            done < <(tail -n +2 "$TODAY_FILE")
            echo "diff_file=$TODAY_FILE" >> $GITHUB_ENV
            echo "diff_count=$DIFF_COUNT" >> $GITHUB_ENV
            if [ $DIFF_COUNT -gt 0 ]; then
              echo "mail_body=The daily violin job scraper found $DIFF_COUNT new or changed job links. See the attached CSV for details." >> $GITHUB_ENV
            else
              echo "mail_body=No new or changed job links were found today. See the attached CSV for all current jobs." >> $GITHUB_ENV
            fi
          elif [ -f "$TODAY_FILE" ]; then
            echo "No previous CSV found, sending today's CSV."
            echo "diff_file=$TODAY_FILE" >> $GITHUB_ENV
            echo "diff_count=ALL" >> $GITHUB_ENV
            echo "mail_body=This is the first run of the violin job scraper. See the attached CSV for all current jobs." >> $GITHUB_ENV
          else
            echo "diff_file=" >> $GITHUB_ENV
            echo "diff_count=0" >> $GITHUB_ENV
            echo "mail_body=No CSV file was generated today." >> $GITHUB_ENV
          fi

      # Remove the Print diff CSV (after compare step) step

      - name: Send email with results
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "Violin Job Scraper: ${{ env.diff_count }} New or Changed Job Links"
          to: ${{ secrets.MAIL_USERNAME }}, ${{ secrets.TARGET_EMAIL }}
          from: ${{ secrets.MAIL_USERNAME }}
          body: |
            Hello there,

            ${{ env.QUOTE }}

            ${{ env.mail_body }}

            Have a great day!
            Regards,
            Violin Scraper Bot
          attachments: ${{ env.diff_file }}

      - name: Save today's CSV to cache for next run
        uses: actions/cache@v4
        with:
          path: orchestra_jobs_yesterday.csv
          key: yesterday-csv